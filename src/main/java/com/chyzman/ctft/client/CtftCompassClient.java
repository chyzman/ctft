package com.chyzman.ctft.client;

import com.chyzman.ctft.Items.ItemInit;
import com.chyzman.ctft.classes.CompassPredicate;
import net.fabricmc.api.ClientModInitializer;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.fabricmc.fabric.api.object.builder.v1.client.model.FabricModelPredicateProviderRegistry;
import net.minecraft.util.Identifier;

@Environment(EnvType.CLIENT)
public class CtftCompassClient{
    public static void INIT() {
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIABOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIABUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIADOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIAFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIAFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIALEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIALOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIAPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIAPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIASAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIASIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIASLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIASTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIATRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACACIAWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ACTIVATORRAILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ALLIUMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AMETHYSTCLUSTERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AMETHYSTSHARDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANCIENTDEBRISCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANDESITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANDESITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANDESITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANDESITEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ANVILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.APPLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ARMORSTANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ARROWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AXOLOTLSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AZALEACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AZALEALEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.AZUREBLUETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BAKEDPOTATOCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BAMBOOCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BARRELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BARRIERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BASALTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BATSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEACONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEDROCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEENESTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEEHIVECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEETROOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEETROOTSEEDSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BEETROOTSOUPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BELLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIGDRIPLEAFCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHBOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHLEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHSAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHSIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BIRCHWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLACKSTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLASTFURNACECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLAZEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLAZERODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLAZESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFAMETHYSTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFCOALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFDIAMONDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFEMERALDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFGOLDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFIRONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFLAPISLAZULICOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFNETHERITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFQUARTZCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFRAWCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFRAWGOLDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFRAWIRONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLOCKOFREDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEICECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEORCHIDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BLUEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BONEBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BONEMEALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BOOKSHELFCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BOWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BOWLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRAINCORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRAINCORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRAINCORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BREADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BREWINGSTANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNMUSHROOMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNMUSHROOMBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BROWNWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUBBLECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUBBLECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUBBLECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUCKETOFAXOLOTLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUDDINGAMETHYSTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.BUNDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CACTUSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CAKECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CALCITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CAMPFIRECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CARROTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CARROTONASTICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CARTOGRAPHYTABLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CARVEDPUMPKINCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CATSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CAULDRONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CAVESPIDERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINCOMMANDBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINMAILBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINMAILCHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINMAILHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHAINMAILLEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHARCOALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHESTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHESTMINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHICKENSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHIPPEDANVILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDDEEPSLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDNETHERBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDPOLISHEDBLACKSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDQUARTZBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDREDSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHISELEDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHORUSFLOWERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHORUSFRUITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CHORUSPLANTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CLAYCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CLAYBALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COALORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COARSEDIRTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLEDDEEPSLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLEDDEEPSLATESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLEDDEEPSLATESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLEDDEEPSLATEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLESTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLESTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLESTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBBLESTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COBWEBCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COCOABEANSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CODBUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CODSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COMMANDBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COMMANDBLOCKMINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COMPARATORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COMPASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COMPOSTERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CONDUITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDCHICKENCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDCODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDMUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDPORKCHOPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDRABBITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKEDSALMONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COOKIECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COPPERINGOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COPPERORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CORNFLOWERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.COWSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRACKEDDEEPSLATEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRACKEDDEEPSLATETILESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRACKEDNETHERBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRACKEDPOLISHEDBLACKSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRACKEDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRAFTINGTABLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CREEPERBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CREEPERHEADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CREEPERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONFUNGUSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONHYPHAECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONNYLIUMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONROOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONSIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONSTEMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRIMSONTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CROSSBOWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CRYINGOBSIDIANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTREDSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTREDSANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CUTSANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.CYANWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DAMAGEDANVILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DANDELIONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKBOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKLEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKSAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKSIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKOAKWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKPRISMARINECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKPRISMARINESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DARKPRISMARINESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DAYLIGHTDETECTORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBRAINCORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBRAINCORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBRAINCORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBUBBLECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBUBBLECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBUBBLECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADBUSHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADFIRECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADFIRECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADFIRECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADHORNCORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADHORNCORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADHORNCORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADTUBECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADTUBECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEADTUBECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEBUGSTICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATECOALORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATECOPPERORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEDIAMONDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEEMERALDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEGOLDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEIRONORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATELAPISLAZULIORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATEREDSTONEORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATETILESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATETILESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATETILEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DEEPSLATETILESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DETECTORRAILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDCHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDHORSEARMORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDLEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDSHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIAMONDSWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIORITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIORITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIORITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIORITEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DIRTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DISPENSERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DOLPHINSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DONKEYSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRAGONBREATHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRAGONEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRAGONHEADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRIEDKELPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRIEDKELPBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DRIPSTONEBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DROPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.DROWNEDSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ELDERGUARDIANSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ELYTRACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EMERALDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EMERALDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENCHANTEDBOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENCHANTEDGOLDENAPPLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENCHANTINGTABLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDCRYSTALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDPORTALFRAMECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDRODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDSTONEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDSTONEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDSTONEBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDERCHESTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDEREYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDERPEARLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDERMANSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ENDERMITESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EVOKERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EXPERIENCEBOTTLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EXPOSEDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EXPOSEDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EXPOSEDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.EXPOSEDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FARMLANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FEATHERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FERMENTEDSPIDEREYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FILLEDMAPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIRECHARGECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIRECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIRECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIRECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIREWORKROCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FIREWORKSTARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FISHINGRODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLETCHINGTABLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLINTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLINTANDSTEELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLOWERBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLOWERPOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLOWERINGAZALEACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FLOWERINGAZALEALEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FOXSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FURNACECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.FURNACEMINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GHASTSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GHASTTEARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GILDEDBLACKSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLASSBOTTLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLISTERINGMELONSLICECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOBEBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWBERRIESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWINKSACCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWITEMFRAMECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWLICHENCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWSQUIDSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GLOWSTONEDUSTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOATSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDINGOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDNUGGETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENAPPLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENCARROTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENCHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENHORSEARMORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENLEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENSHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GOLDENSWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRANITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRANITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRANITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRANITEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRASSBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRASSPATHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRAYWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GREENWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GRINDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GUARDIANSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.GUNPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HANGINGROOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HAYBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HEARTOFTHESEACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HEAVYWEIGHTEDPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HOGLINSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HONEYBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HONEYBOTTLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HONEYCOMBCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HONEYCOMBBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HOPPERMINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HORNCORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HORNCORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HORNCORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HORSESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.HUSKSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ICECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDCHISELEDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDCOBBLESTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDCRACKEDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDDEEPSLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDMOSSYSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INFESTEDSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.INKSACCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONBARSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONCHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONHORSEARMORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONINGOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONLEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONNUGGETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONSHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONSWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.IRONTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ITEMFRAMECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JACKOLANTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JIGSAWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUKEBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEBOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLELEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLELOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLESAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLESIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLETRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.JUNGLEWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.KELPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.KNOWLEDGEBOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LADDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LANTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LAPISLAZULICOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LAPISORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LARGEAMETHYSTBUDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LARGEFERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LAVACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERCHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERHORSEARMORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEATHERLEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LECTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LEVERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTBLUEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTGRAYWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTWEIGHTEDPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIGHTNINGRODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LILACCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LILYOFTHEVALLEYCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LILYPADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LIMEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LINGERINGPOTIONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LLAMASPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LODESTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.LOOMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTABANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTABEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTACANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTACARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTACONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTACONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTADYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTAGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTASHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTASTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTASTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTATERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGENTAWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGMABLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGMACREAMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAGMACUBESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MAPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MEDIUMAMETHYSTBUDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MELONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MELONSEEDSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MELONSLICECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MILKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOJANGBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOOSHROOMSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYCOBBLESTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYCOBBLESTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYCOBBLESTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYCOBBLESTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYSTONEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYSTONEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYSTONEBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MOSSYSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MULESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSHROOMSTEMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSHROOMSTEWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISC11COMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISC13COMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCBLOCKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCCATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCCHIRPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCFARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCMALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCMELLOHICOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCOTHERSIDECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCPIGSTEPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCSTALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCSTRADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCWAITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MUSICDISCWARDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.MYCELIUMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NAMETAGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NAUTILUSSHELLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERGOLDORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERQUARTZORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERSPROUTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERSTARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERWARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERWARTBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEBOOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITECHESTPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEINGOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITELEGGINGSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITEPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITESCRAPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITESHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERITESWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NETHERRACKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.NOTEBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKBOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKLEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKSAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKSIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OAKWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OBSERVERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OBSIDIANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OCELOTSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGETULIPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ORANGEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OXEYEDAISYCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OXIDIZEDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OXIDIZEDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OXIDIZEDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.OXIDIZEDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PACKEDICECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PAINTINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PANDASPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PAPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PARROTSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PEONYCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PETRIFIEDOAKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PHANTOMMEMBRANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PHANTOMSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PIGSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PIGLINBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PIGLINSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PILLAGERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKTULIPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PINKWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PISTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PLAYERHEADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PODZOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POINTEDDRIPSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POISONOUSPOTATOCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLARBEARSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDANDESITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDANDESITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDANDESITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBASALTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDBLACKSTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDEEPSLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDEEPSLATESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDEEPSLATESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDEEPSLATEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDIORITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDIORITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDDIORITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDGRANITECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDGRANITESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POLISHEDGRANITESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POPPEDCHORUSFRUITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POPPYCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PORKCHOPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POTATOCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POTIONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POWDERSNOWBUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.POWEREDRAILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINECRYSTALSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINESHARDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PRISMARINEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUFFERFISHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUFFERFISHBUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUFFERFISHSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUMPKINCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUMPKINPIECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PUMPKINSEEDSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPLEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPURBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPURPILLARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPURSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.PURPURSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.QUARTZCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.QUARTZBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.QUARTZPILLARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.QUARTZSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.QUARTZSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RABBITFOOTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RABBITHIDECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RABBITSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RABBITSTEWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAVAGERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWBEEFCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWCHICKENCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWCODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWGOLDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWIRONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWMUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWRABBITCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RAWSALMONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDMUSHROOMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDMUSHROOMBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDNETHERBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDNETHERBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDNETHERBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDNETHERBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSANDSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSANDSTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDTULIPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTONELAMPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTONEORECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REDSTONETORCHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REPEATERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.REPEATINGCOMMANDBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.RESPAWNANCHORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ROOTEDDIRTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ROSEBUSHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ROTTENFLESHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SADDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SALMONBUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SALMONSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SANDSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SANDSTONEWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SCAFFOLDINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SCULKSENSORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SCUTECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SEALANTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SEAPICKLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SEAGRASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHEARSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHEEPSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHIELDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHROOMLIGHTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHULKERSHELLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SHULKERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SILVERFISHSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SKELETONHORSESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SKELETONSKULLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SKELETONSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SKULLBANNERPATTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SLIMEBALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SLIMEBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SLIMESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMALLAMETHYSTBUDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMALLDRIPLEAFCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMITHINGTABLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOKERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHBASALTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHQUARTZCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHQUARTZSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHQUARTZSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHREDSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHREDSANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHREDSANDSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHSANDSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHSANDSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHSANDSTONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHSTONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SMOOTHSTONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SNOWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SNOWBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SNOWBALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SOULCAMPFIRECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SOULLANTERNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SOULSANDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SOULSOILCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SOULTORCHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPAWNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPECTRALARROWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPIDEREYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPIDERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPLASHPOTIONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPONGECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPOREBLOSSOMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEBOATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCELEAVESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCELOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCESAPLINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCESIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCETRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPRUCEWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SPYGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SQUIDSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STEAKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STICKYPISTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEBRICKSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEBRICKSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEBRICKWALLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEBRICKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONEPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONESHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONESLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONESTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONESWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STONECUTTERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRAYSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIDERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDACACIALOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDACACIAWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDBIRCHLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDBIRCHWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDCRIMSONHYPHAECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDCRIMSONSTEMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDDARKOAKLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDDARKOAKWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDJUNGLELOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDJUNGLEWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDOAKLOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDOAKWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDSPRUCELOGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDSPRUCEWOODCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDWARPEDHYPHAECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRIPPEDWARPEDSTEMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRUCTUREBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.STRUCTUREVOIDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SUGARCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SUGARCANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SUNFLOWERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SUSPICIOUSSTEWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.SWEETBERRIESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TALLGRASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TARGETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TINTEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TIPPEDARROWCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TNTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TNTMINECARTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TORCHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TOTEMOFUNDYINGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TRADERLLAMASPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TRAPPEDCHESTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TRIDENTCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TRIPWIREHOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TROPICALFISHCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TROPICALFISHBUCKETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TROPICALFISHSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TUBECORALCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TUBECORALBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TUBECORALFANCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TUFFCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TURTLEEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TURTLEHELMETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TURTLESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.TWISTINGVINESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.VEXSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.VILLAGERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.VINDICATORSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.VINECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WANDERINGTRADERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDBUTTONCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDFENCECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDFENCEGATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDFUNGUSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDFUNGUSONASTICKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDHYPHAECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDNYLIUMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDPLANKSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDPRESSUREPLATECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDROOTSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDSIGNCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDSTEMCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDTRAPDOORCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WARPEDWARTBLOCKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WATERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDBLOCKOFCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDEXPOSEDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDEXPOSEDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDEXPOSEDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDEXPOSEDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDOXIDIZEDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDOXIDIZEDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDOXIDIZEDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDOXIDIZEDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDWEATHEREDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDWEATHEREDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDWEATHEREDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WAXEDWEATHEREDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WEATHEREDCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WEATHEREDCUTCOPPERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WEATHEREDCUTCOPPERSLABCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WEATHEREDCUTCOPPERSTAIRSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WEEPINGVINESCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WETSPONGECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHEATCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHEATSEEDSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITEBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITEBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITECANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITECARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITECONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITECONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITEDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITEGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITESHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITESTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITESTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITETERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITETULIPCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WHITEWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WITCHSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WITHERROSECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WITHERSKELETONSKULLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WITHERSKELETONSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOLFSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOODENAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOODENHOECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOODENPICKAXECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOODENSHOVELCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WOODENSWORDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WRITABLEBOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.WRITTENBOOKCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWBANNERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWBEDCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWCANDLECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWCARPETCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWCONCRETECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWCONCRETEPOWDERCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWDYECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWGLAZEDTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWSHULKERBOXCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWSTAINEDGLASSCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWSTAINEDGLASSPANECOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWTERRACOTTACOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.YELLOWWOOLCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOGLINSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOMBIEHEADCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOMBIEHORSESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOMBIESPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOMBIEVILLAGERSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
        FabricModelPredicateProviderRegistry.register(ItemInit.ZOMBIFIEDPIGLINSPAWNEGGCOMPASS, new Identifier("angle"), new CompassPredicate());
    }
}