plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower-mini' version '1.2.1'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.wispforest.io' }
    maven { url = uri("https://storage.googleapis.com/devan-maven/") }
    maven { url "https://cursemaven.com" }
    maven { url "https://maven.terraformersmc.com/"}
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation include("io.wispforest:owo-lib:${project.owo_version}")

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    modImplementation include("curse.maven:xl-packets-fabric-390168:3527187")

    modImplementation include("curse.maven:ferritecore-fabric-459857:3550048")

    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    modImplementation include("net.devtech:arrp:0.5.4")

    modApi("me.shedaniel.cloth:cloth-config-fabric:6.1.48") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi "com.shnupbups:Piglib:1.1.1+fabric-mc1.18"
    include "com.shnupbups:Piglib:1.1.1+fabric-mc1.18"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
}

jar {
    zip64 = true
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
