package com.chyzman.ctft;

import com.chyzman.ctft.classes.CompassRender;
import com.chyzman.ctft.init.CompassInit;
import net.minecraft.client.renderer.item.ItemProperties;
import net.minecraft.resources.ResourceLocation;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;

@Mod.EventBusSubscriber(modid = Ctft.modid, value = Dist.CLIENT, bus = Mod.EventBusSubscriber.Bus.MOD)
public class CtftCompassClient
{
    @SubscribeEvent
    public static void setModelProperties(FMLClientSetupEvent event) {
        ItemProperties.register(CompassInit.ACACIABOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIABUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIADOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIAFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIAFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIALEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIALOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIAPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIAPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIASAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIASIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIASLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIASTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIATRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACACIAWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ACTIVATORRAILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ALLIUMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AMETHYSTCLUSTERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AMETHYSTSHARDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANCIENTDEBRISCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANDESITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANDESITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANDESITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANDESITEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ANVILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.APPLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ARMORSTANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ARROWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AXOLOTLSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AZALEACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AZALEALEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.AZUREBLUETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BAKEDPOTATOCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BAMBOOCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BARRELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BARRIERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BASALTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BATSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEACONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEDROCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEENESTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWBEEFCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEEHIVECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEETROOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEETROOTSEEDSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BEETROOTSOUPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BELLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIGDRIPLEAFCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHBOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHLEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHSAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHSIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BIRCHWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLACKSTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLASTFURNACECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLAZEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLAZERODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLAZESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFAMETHYSTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFNETHERITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFRAWCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFRAWGOLDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFRAWIRONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEICECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEORCHIDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLUEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BONEBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BONEMEALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BOOKSHELFCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BOWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BOWLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRAINCORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRAINCORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRAINCORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BREADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BREWINGSTANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNMUSHROOMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNMUSHROOMBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BROWNWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUBBLECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUBBLECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUBBLECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUCKETOFAXOLOTLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BUDDINGAMETHYSTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CACTUSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CAKECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CALCITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CAMPFIRECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CARROTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CARROTONASTICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CARTOGRAPHYTABLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CARVEDPUMPKINCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CATSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CAULDRONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CAVESPIDERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINCOMMANDBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINMAILBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINMAILCHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINMAILHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHAINMAILLEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHARCOALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHESTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHESTMINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWCHICKENCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHICKENSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHIPPEDANVILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDDEEPSLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDNETHERBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDPOLISHEDBLACKSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDQUARTZBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDREDSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHISELEDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHORUSFLOWERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHORUSFRUITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CHORUSPLANTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CLAYCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CLAYBALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFCOALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COALORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COARSEDIRTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLEDDEEPSLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLEDDEEPSLATESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLEDDEEPSLATESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLEDDEEPSLATEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLESTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLESTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLESTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBBLESTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COBWEBCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COCOABEANSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWCODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CODBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CODSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COMMANDBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COMMANDBLOCKMINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COMPARATORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COMPASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COMPOSTERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CONDUITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STEAKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDCHICKENCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDCODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDMUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDPORKCHOPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDRABBITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKEDSALMONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COOKIECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COPPERINGOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COPPERORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CORNFLOWERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.COWSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRACKEDDEEPSLATEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRACKEDDEEPSLATETILESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRACKEDNETHERBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRACKEDPOLISHEDBLACKSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRACKEDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRAFTINGTABLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CREEPERBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CREEPERHEADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CREEPERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONFUNGUSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONHYPHAECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONNYLIUMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONROOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONSIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONSTEMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRIMSONTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CROSSBOWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CRYINGOBSIDIANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTREDSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTREDSANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CUTSANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.CYANWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DAMAGEDANVILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DANDELIONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKBOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKLEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKSAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKSIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKOAKWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKPRISMARINECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKPRISMARINESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DARKPRISMARINESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DAYLIGHTDETECTORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBRAINCORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBRAINCORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBRAINCORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBUBBLECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBUBBLECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBUBBLECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADBUSHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADFIRECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADFIRECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADFIRECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADHORNCORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADHORNCORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADHORNCORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADTUBECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADTUBECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEADTUBECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEBUGSTICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATECOALORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATECOPPERORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEDIAMONDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEEMERALDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEGOLDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEIRONORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATELAPISLAZULIORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATEREDSTONEORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATETILESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATETILESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATETILEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DEEPSLATETILESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DETECTORRAILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFDIAMONDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDCHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDHORSEARMORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDLEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDSHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIAMONDSWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIORITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIORITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIORITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIORITEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DIRTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DISPENSERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DOLPHINSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DONKEYSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRAGONBREATHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRAGONEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRAGONHEADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRIEDKELPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRIEDKELPBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DRIPSTONEBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DROPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.DROWNEDSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ELDERGUARDIANSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ELYTRACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EMERALDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFEMERALDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EMERALDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENCHANTEDBOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENCHANTEDGOLDENAPPLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENCHANTINGTABLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDCRYSTALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDPORTALFRAMECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDRODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDSTONEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDSTONEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDSTONEBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDERCHESTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDEREYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDERPEARLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDERMANSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ENDERMITESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EVOKERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EXPERIENCEBOTTLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EXPOSEDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EXPOSEDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EXPOSEDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.EXPOSEDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FARMLANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FEATHERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FERMENTEDSPIDEREYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FILLEDMAPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIRECHARGECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIRECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIRECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIRECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIREWORKROCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FIREWORKSTARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FISHINGRODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLETCHINGTABLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLINTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLINTANDSTEELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLOWERBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLOWERPOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLOWERINGAZALEACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FLOWERINGAZALEALEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FOXSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FURNACECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.FURNACEMINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GHASTSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GHASTTEARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GILDEDBLACKSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLASSBOTTLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLISTERINGMELONSLICECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOBEBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWBERRIESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWINKSACCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWITEMFRAMECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWLICHENCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWSQUIDSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GLOWSTONEDUSTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOATSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFGOLDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDINGOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDNUGGETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENAPPLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENCARROTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENCHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENHORSEARMORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENLEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENSHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GOLDENSWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRANITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRANITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRANITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRANITEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRASSBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRASSPATHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRAYWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GREENWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GRINDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GUARDIANSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.GUNPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HANGINGROOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HAYBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HEARTOFTHESEACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HEAVYWEIGHTEDPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HOGLINSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HONEYBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HONEYBOTTLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HONEYCOMBCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HONEYCOMBBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HOPPERMINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HORNCORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HORNCORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HORNCORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HORSESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.HUSKSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ICECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDCHISELEDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDCOBBLESTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDCRACKEDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDDEEPSLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDMOSSYSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INFESTEDSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.INKSACCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONBARSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFIRONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONCHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONHORSEARMORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONINGOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONLEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONNUGGETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONSHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONSWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.IRONTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ITEMFRAMECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JACKOLANTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JIGSAWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUKEBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEBOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLELEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLELOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLESAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLESIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLETRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.JUNGLEWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.KELPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.KNOWLEDGEBOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LADDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LANTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFLAPISLAZULICOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LAPISLAZULICOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LAPISORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LARGEAMETHYSTBUDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LARGEFERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LAVABUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERCHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERHORSEARMORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEATHERLEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LECTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LEVERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTBLUEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTGRAYWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTWEIGHTEDPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIGHTNINGRODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LILACCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LILYOFTHEVALLEYCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LILYPADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LIMEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LINGERINGPOTIONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LLAMASPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LODESTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.LOOMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTABANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTABEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTACANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTACARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTACONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTACONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTADYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTAGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTASHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTASTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTASTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTATERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGENTAWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGMABLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGMACREAMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAGMACUBESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MAPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MEDIUMAMETHYSTBUDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MELONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MELONSEEDSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MELONSLICECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MILKBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOJANGBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOOSHROOMSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYCOBBLESTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYCOBBLESTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYCOBBLESTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYCOBBLESTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYSTONEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYSTONEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYSTONEBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MOSSYSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MULESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSHROOMSTEMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSHROOMSTEWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISC11COMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISC13COMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCBLOCKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCCATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCCHIRPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCFARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCMALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCMELLOHICOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCPIGSTEPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCSTALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCSTRADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCWAITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MUSICDISCWARDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWMUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.MYCELIUMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NAMETAGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NAUTILUSSHELLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERGOLDORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERQUARTZORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERSPROUTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERSTARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERWARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERWARTBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEBOOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITECHESTPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEINGOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITELEGGINGSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITEPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITESCRAPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITESHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERITESWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NETHERRACKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.NOTEBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKBOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKLEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKSAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKSIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OAKWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OBSERVERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OBSIDIANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OCELOTSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGETULIPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ORANGEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OXEYEDAISYCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OXIDIZEDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OXIDIZEDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OXIDIZEDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.OXIDIZEDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PACKEDICECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PAINTINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PANDASPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PAPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PARROTSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PEONYCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PETRIFIEDOAKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PHANTOMMEMBRANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PHANTOMSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PIGSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PIGLINBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PIGLINSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PILLAGERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKTULIPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PINKWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PISTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PLAYERHEADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PODZOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POINTEDDRIPSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POISONOUSPOTATOCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLARBEARSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDANDESITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDANDESITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDANDESITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBASALTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDBLACKSTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDEEPSLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDEEPSLATESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDEEPSLATESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDEEPSLATEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDIORITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDIORITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDDIORITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDGRANITECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDGRANITESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POLISHEDGRANITESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POPPEDCHORUSFRUITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POPPYCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PORKCHOPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POTATOCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POTIONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POWDERSNOWBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.POWEREDRAILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINECRYSTALSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINESHARDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PRISMARINEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUFFERFISHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUFFERFISHBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUFFERFISHSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUMPKINCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUMPKINPIECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PUMPKINSEEDSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPLEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPURBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPURPILLARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPURSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.PURPURSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.QUARTZCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFQUARTZCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.QUARTZBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.QUARTZPILLARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.QUARTZSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.QUARTZSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWRABBITCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RABBITFOOTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RABBITHIDECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RABBITSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RABBITSTEWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAVAGERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWGOLDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWIRONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDMUSHROOMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDMUSHROOMBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDNETHERBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDNETHERBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDNETHERBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDNETHERBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSANDSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSANDSTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDTULIPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.BLOCKOFREDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTONELAMPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTONEORECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REDSTONETORCHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REPEATERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.REPEATINGCOMMANDBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RESPAWNANCHORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ROOTEDDIRTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ROSEBUSHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ROTTENFLESHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SADDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.RAWSALMONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SALMONBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SALMONSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SANDSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SANDSTONEWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SCAFFOLDINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SCULKSENSORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SCUTECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SEALANTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SEAPICKLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SEAGRASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHEARSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHEEPSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHIELDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHROOMLIGHTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHULKERSHELLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SHULKERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SILVERFISHSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SKELETONHORSESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SKELETONSKULLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SKELETONSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SKULLBANNERPATTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SLIMEBALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SLIMEBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SLIMESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMALLAMETHYSTBUDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMALLDRIPLEAFCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMITHINGTABLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOKERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHBASALTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHQUARTZCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHQUARTZSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHQUARTZSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHREDSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHREDSANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHREDSANDSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHSANDSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHSANDSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHSANDSTONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHSTONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SMOOTHSTONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SNOWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SNOWBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SNOWBALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SOULCAMPFIRECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SOULLANTERNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SOULSANDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SOULSOILCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SOULTORCHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPAWNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPECTRALARROWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPIDEREYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPIDERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPLASHPOTIONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPONGECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPOREBLOSSOMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEBOATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCELEAVESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCELOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCESAPLINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCESIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCETRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPRUCEWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SPYGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SQUIDSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STICKYPISTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEBRICKSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEBRICKSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEBRICKWALLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEBRICKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONEPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONESHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONESLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONESTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONESWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STONECUTTERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRAYSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIDERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDACACIALOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDACACIAWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDBIRCHLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDBIRCHWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDCRIMSONHYPHAECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDCRIMSONSTEMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDDARKOAKLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDDARKOAKWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDJUNGLELOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDJUNGLEWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDOAKLOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDOAKWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDSPRUCELOGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDSPRUCEWOODCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDWARPEDHYPHAECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRIPPEDWARPEDSTEMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRUCTUREBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.STRUCTUREVOIDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SUGARCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SUGARCANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SUNFLOWERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SUSPICIOUSSTEWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.SWEETBERRIESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TALLGRASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TARGETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TINTEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TIPPEDARROWCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TNTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TNTMINECARTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TORCHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TOTEMOFUNDYINGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TRADERLLAMASPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TRAPPEDCHESTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TRIDENTCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TRIPWIREHOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TROPICALFISHCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TROPICALFISHBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TROPICALFISHSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TUBECORALCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TUBECORALBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TUBECORALFANCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TUFFCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TURTLEEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TURTLEHELMETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TURTLESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.TWISTINGVINESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.VEXSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.VILLAGERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.VINDICATORSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.VINECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WANDERINGTRADERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDBUTTONCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDFENCECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDFENCEGATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDFUNGUSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDFUNGUSONASTICKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDHYPHAECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDNYLIUMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDPLANKSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDPRESSUREPLATECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDROOTSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDSIGNCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDSTEMCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDTRAPDOORCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WARPEDWARTBLOCKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WATERBUCKETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDBLOCKOFCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDEXPOSEDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDEXPOSEDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDEXPOSEDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDEXPOSEDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDOXIDIZEDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDOXIDIZEDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDOXIDIZEDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDOXIDIZEDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDWEATHEREDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDWEATHEREDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDWEATHEREDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WAXEDWEATHEREDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WEATHEREDCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WEATHEREDCUTCOPPERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WEATHEREDCUTCOPPERSLABCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WEATHEREDCUTCOPPERSTAIRSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WEEPINGVINESCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WETSPONGECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHEATCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHEATSEEDSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITEBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITEBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITECANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITECARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITECONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITECONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITEDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITEGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITESHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITESTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITESTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITETERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITETULIPCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WHITEWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WITCHSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WITHERROSECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WITHERSKELETONSKULLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WITHERSKELETONSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOLFSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOODENAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOODENHOECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOODENPICKAXECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOODENSHOVELCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WOODENSWORDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WRITABLEBOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.WRITTENBOOKCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWBANNERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWBEDCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWCANDLECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWCARPETCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWCONCRETECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWCONCRETEPOWDERCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWDYECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWGLAZEDTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWSHULKERBOXCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWSTAINEDGLASSCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWSTAINEDGLASSPANECOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWTERRACOTTACOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.YELLOWWOOLCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOGLINSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOMBIEHEADCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOMBIEHORSESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOMBIESPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOMBIEVILLAGERSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
        ItemProperties.register(CompassInit.ZOMBIFIEDPIGLINSPAWNEGGCOMPASS.get(), new ResourceLocation("angle"), new CompassRender());
   }
}